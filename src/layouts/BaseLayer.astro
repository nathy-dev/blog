---
import { ViewTransitions } from "astro:transitions";

import Meta from "@/components/Meta.astro";

import { Nav } from "@/components/Nav";
import config from "@/config";

const {
  meta: { title, description = config.description },
} = Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
<html lang="en">
  <head>
    <Meta title={title} description={description} />
    <ViewTransitions />
  </head>
  <body
    class="mx-auto max-w-[900px] bg-bg px-5 font-base text-text scrollbar scrollbar-thumb-black dark:bg-darkBg dark:text-darkText dark:scrollbar-thumb-white"
  >
    <Nav client:only="react" pathName={Astro.url.pathname} />
    <main
      class="min-h-[calc(100dvh-70px)] py-10 pt-[120px] w500:min-h-[calc(100dvh-70px)] w400:pt-[140px]"
    >
      <slot />
    </main>
  </body>
</html>
